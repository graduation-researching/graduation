#include<stdio.h>
#include<DxLib.h>
#include"main.h"
#include<time.h>

gamestate g_gamestate;
CharaData PLAYER_BULLET[100];
CharaData ENEMY_BULLET[50];
CharaData ENEMY;

int FONT_NORMAL;
int g_lasttime = 0;
int Ammo = 0;
BOOL Z_KEY_TRUE = FALSE;
int LOOP_COUNT_PLAYER = sizeof PLAYER_BULLET / sizeof PLAYER_BULLET[0];
int LOOP_COUNT_ENEMY = sizeof ENEMY_BULLET / sizeof ENEMY_BULLET[0];

int WINAPI WinMain(HINSTANCE h1, HINSTANCE hp, LPSTR lpC, int nC){
	SetWindowSizeChangeEnableFlag(TRUE);
	ChangeWindowMode(true);
	SetGraphMode(850, 700, 32);
	if (DxLib_Init() == -1) return -1;
	if (LoadImg() == FALSE)return -1;
	SetWindowText("修羅道至高天");
	FONT_NORMAL = CreateFontToHandle("メイリオ",42,3,DX_FONTTYPE_NORMAL);

	g_gamestate = GAME_TITLE;
	srand((unsigned int)time(NULL));

	for (int i = 0; i < LOOP_COUNT_ENEMY; i++){
		ENEMY_BULLET[i].living = FALSE;
		ENEMY_BULLET[i].RIGHT = 1;
		ENEMY_BULLET[i].LEFT = 1;
	}
	for (int i = 0; i < LOOP_COUNT_PLAYER; i++){
		PLAYER_BULLET[i].x = 0;
		PLAYER_BULLET[i].y = 0;
		PLAYER_BULLET[i].living = FALSE;
		PLAYER_BULLET[i].movement = 0.1;
	}
	
	SetDrawScreen(DX_SCREEN_BACK);
	while (ProcessMessage() == 0 && CheckHitKey(KEY_INPUT_ESCAPE) == 0){
		ClearDrawScreen();
		switch (g_gamestate)
		{
		case GAME_TITLE:
			DrawTitle();
			break;
		case GAME_MAIN:
			DrawGameMain();
			break;
		case GAME_OVER:
			DrawGameOver();
			break;
		}
		ScreenFlip();
	}
	WaitKey();
	DxLib_End();
	return 0;
}
void DrawTitle(){
	DrawBox(0, 0, 850,900, GetColor(255, 255, 255), true);
	DrawStringToHandle(200, 130, "SPACEキーでゲーム開始", GetColor(0, 0, 0), FONT_NORMAL);

	if (CheckHitKey(KEY_INPUT_SPACE) == 1){
		g_gamestate = GAME_MAIN;
		Initstage();
	}
}
void DrawGameOver(){
	DrawBox(0, 0, 900, 900, GetColor(255, 255, 255), true);
	DrawStringToHandle(200, 130, "ゲームオーバー", GetColor(255, 0, 0), FONT_NORMAL);
	DrawStringToHandle(200, 200, "ZA☆MA☆A☆MI☆RO！", GetColor(255, 0, 0), FONT_NORMAL);
}
void DrawGameMain(){
	Ammo = rand() % LOOP_COUNT_ENEMY + 1;
	drawmap();
	
	for (int i = 0; PLAYER_BULLET[i].living == FALSE && CheckHitKey(KEY_INPUT_Z) == TRUE && i < LOOP_COUNT_PLAYER; i++){
		PLAYER_BULLET[i].x = HERO.x + 25;
		PLAYER_BULLET[i].y = HERO.y;
		PLAYER_BULLET[i].living = TRUE;
		PLAYER_BULLET[i].movement = 0.1;
	}

	/*攻撃判定*/
	for (int i = 0; i < LOOP_COUNT_PLAYER; i++){
		if (PLAYER_BULLET[i].living == TRUE){
			PLAYER_BULLET[i].movement += rand() % 2 + 1 % 10;
			if (PLAYER_BULLET[i].movement > 10)PLAYER_BULLET[i].movement = 0.4;
		}
	}
	gamemain();
}
